# Author - Gowtham Musuvathi Kuamresh
# Edited on Jan 3 2021


# This

# -*- coding: utf-8 -*-
"""Facebook Posts data extraction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iqfgk-gyEDMWLz9cL3q0WY2RS1Fnngxu

# Feature - Predicting the mood of the user by Analysing the Posts done by the user
"""

import os
import nltk
import json
from nltk.corpus import stopwords
import pandas
import pandas as pd
import re

nltk.download('stopwords')
"""Preprocessing text data to remove stop words"""

def remove_stopwords(words):
    new_words = ""
    word = words.split(" ")
    for i in word:
        if i not in stopwords.words('english'):
            new_words += (i) + " "
    return (new_words[:-1])


def dataset_creation(foldername, output):
    res = []
    for cur, _dirs, files in os.walk(foldername):
        for file in files:
            with open(cur + "/" + file, "r") as input:
                dat = json.load(input)
                for posts in dat:

                    date_time = pandas.to_datetime((posts["timestamp"]), unit='s')
                    date_time = pandas.to_datetime(date_time).date()
                    res.append(str(date_time))
                    try:
                        res.append(posts["data"][0]["post"])
                        # Text preprocessing by removing urls, special chars and numbers
                        text = posts["data"][0]["post"]
                        text = text.lower()
                        text = re.sub(r"[.*?\|\/:]", "", text)
                        text = re.sub(r'^https?:\/\/.*[\r\n]*', '', text)
                        text = re.sub(r"[^a-z0-9]+", " ", text)
                        text = remove_stopwords(text)
                        res.append(text)
                    except:
                        res.append("")
                        res.append("")
                    res.append(foldername)
                    output.append(res)
                    res = []

    return output


"""# Dataset creation of all sub folders in the root directory"""
os.getcwd()
folders = os.listdir()

# Set current working directory
def main(sub_folders):
    out = []
    for each_folder in folders:
        dataset_creation(each_folder + "/" + sub_folders, out)
    column_names = ["Date", "Content", "Pre processed Content", "User name/ User category"]
    df = pd.DataFrame(out, columns=column_names)
    return df


"""Creates a csv file of all the text data from the posts posted by the users"""

df = main("posts")
print(df)

"""# Posts analysis using TextBlob"""

import matplotlib.pyplot  as plt

#Creating a visualization to count the number of positive, negative and neutral posts  by the user

from textblob import TextBlob

score = []
for i in df["Pre processed Content"]:
    a = (TextBlob(str(i)))
    if (a.sentiment.polarity) < 0:
        score.append(-1)
    if (a.sentiment.polarity) == 0:
        score.append(0)
    if (a.sentiment.polarity) > 0:
        score.append(1)
df['Score'] = score

#Categorizing the posts into Positive, Negative and Neutral based on Sentiment polarity

# -1 is coded as Negative posts
negative = df.loc[df["Score"] == -1]

# 1 is coded as Positive posts
positive = df.loc[df["Score"] == 1]

# 0 is coded as Neutral posts
neutral = df.loc[df["Score"] == 0]

negative.head()

neg_df = negative.groupby(negative["Date"])["Score"].agg("count").to_frame("Negative Posts").reset_index()
neg_df.plot(x='Date', y='Negative Posts', kind='line')
plt.suptitle("Negative Posts")
plt.xticks(rotation=45, ha='right')
plt.show()

neu_df = neutral.groupby(neutral["Date"])["Score"].agg("count").to_frame("Neutral Posts").reset_index()
neu_df.plot(x="Date", y="Neutral Posts", kind="line")
plt.xticks(rotation=45, ha='right')
plt.suptitle("Neutral Posts")

plt.show()

positive.head()

pos_df = positive.groupby(positive["Date"])["Score"].agg("count").to_frame("Positive Posts").reset_index()
print(pos_df)
pos_df.plot(x="Date", y="Positive Posts", kind="line")
plt.suptitle("Positive Posts")
plt.xticks(rotation=45, ha='right')
plt.show()

#"Creating an excel file to do data vis in Tableau

final_df = pd.merge(pos_df, neg_df, how="outer", on="Date")

final = pd.merge(final_df, neu_df, how="outer", on="Date")

final = final.fillna(0)
final[["Positive Posts", "Negative Posts", "Neutral Posts"]] = final[
    ["Positive Posts", "Negative Posts", "Neutral Posts"]].astype(int)
print(final)
final.to_csv("Posts_Sentiment_Analysis.csv", encoding='utf-8', index=False)